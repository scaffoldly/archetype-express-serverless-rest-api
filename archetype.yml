
---
script:
  - rules:
      - destination:
          overwrite: true

  - set:
      repository-name:
        prompt: "Repository Name?"
      auth:
        prompt: "Auth Service Exists?"
        type: bool
        default: false
      persistence:
        prompt: "Persistence Type?"
        type:
          enum:
            - none
            - dynamodb
        default: none

  - if:
      conditions:
        - switch-enabled: github
      then:
        - render:
            directory:
              source: "github"

  - if:
      conditions:
        - switch-enabled: serverless
      then:
        - set:
            service-name:
              value: "{{ repository-name | trim_end_matches(pat='-sls-rest-api') }}"
        - rules:
            - destination:
                overwrite: false
        - render:
            directory:
              source: "immutable/serverless"

  - if:
      conditions:
        - switch-enabled: serverless
      then:
        - render:
            directory:
              source: "serverless"

  - if:
      conditions:
        - switch-enabled: entity
        - is-true: "{{ persistence == 'dynamodb' }}"
      then:
        - set:
            entities:
              prompt: "Entities?"
              default: ""
              type: list
        - rules:
            - destination:
                overwrite: false
        - for:
            item:
              in: entities
              name: entity
            do:
              - info: "Rendering {{ entity }} entity for DynamoDB"
              - render:
                  directory:
                    source: "immutable/dynamodb"
